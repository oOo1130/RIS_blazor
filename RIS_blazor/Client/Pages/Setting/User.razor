@page "/user"
@using RIS_blazor.Shared.Models
@using RIS_blazor.Shared.Models.VWModels
@using RIS_blazor.Shared.Models.ApiModel
@inject HttpClient Http

<h3>User Detail</h3>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
   @* <div class="card mb-5 mb-xl-10">
        <div id="kt_account_profile_details" class="collapse show">
            <form onSubmit={formik.handleSubmit} noValidate class="form">
            <div class="card-body border-top p-9">

                <div class="row mb-3">
                <label class="col-lg-4 text-center col-form-label required fw-bold fs-6">User Name</label>

                <div class="col-lg-8">
                    <div class="row">
                    <div class="col-lg-12 fv-row">
                        <input
                        type="text"
                        class="col-lg-8 fv-row form-control form-control-md form-control-solid mb-3 mb-lg-0"
                        placeholder="User name"
                        value={""}
                        {...formik.getFieldProps("loginName")}
                        />
                        {formik.touched.loginName && formik.errors.loginName && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.loginName}</div>
                        </div>
                        )}
                    </div>
                    </div>
                </div>
                </div>

                <div class="row mb-3">
                <label class="col-lg-4 text-center col-form-label required fw-bold fs-6">Full Name</label>

                <div class="col-lg-8">
                    <div class="row">
                    <div class="col-lg-12 fv-row">
                        <input
                        type="text"
                        class="form-control form-control-md form-control-solid mb-1 mb-lg-0"
                        placeholder="First name"
                        value={""}
                        {...formik.getFieldProps("fullName")}
                        />
                        {formik.touched.fullName && formik.errors.fullName && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.fullName}</div>
                        </div>
                        )}
                    </div>
                    </div>
                </div>
                </div>

                <div class="row mb-3">
                <label
                htmlFor="password"
                class="col-lg-4 text-center col-form-label required fw-bold fs-6"
                >
                Password
                </label>
                <div class="col-lg-8">
                    <div class="row">
                    <div class="col-lg-12 fv-row">
                        <input
                        type="password"
                        class="form-control form-control-md form-control-solid mb-3 mb-lg-0"
                        id="Password"
                        value={0}
                        // {...formik.getFieldProps("password")}
                        />
                        {/* {formik.touched.password && formik.errors.password && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.password}</div>
                        </div>
                        )} */}
                    </div>
                    </div>
                </div>
                </div>

                <div class="row mb-3">
                <label
                htmlFor="confirmpassword"
                class="col-lg-4 text-center col-form-label required fw-bold fs-6"
                >
                Confirm Password
                </label>
                <div class="col-lg-8">
                    <div class="row">
                    <div class="col-lg-12 fv-row">
                        <input
                        type="password"
                        class="form-control form-control-md form-control-solid mb-3 mb-lg-0"
                        id="confirmemailpassword"
                        value={""}
                        // {...formik.getFieldProps("confirmPassword")}
                        />
                        {/* {formik.touched.confirmPassword && formik.errors.confirmPassword && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.confirmPassword}</div>
                        </div>
                        )} */}
                    </div>
                    </div>
                </div>
                </div>

                <div class="row mb-3">
                <label class="col-lg-4 text-center col-form-label fw-bold fs-6">
                    <span>Mobile No</span>
                </label>

                <div class="col-lg-8 fv-row">
                    <input
                    type="tel"
                    class="form-control form-control-md form-control-solid"
                    placeholder="Phone number"
                    value={""}
                    {...formik.getFieldProps("mobileNo")}
                    />
                    {formik.touched.mobileNo && formik.errors.mobileNo && (
                    <div class="fv-plugins-message-container">
                        <div class="fv-help-block">{formik.errors.mobileNo}</div>
                    </div>
                    )}
                </div>
                </div>

                <div class="row mb-3">
                    <label class="col-lg-4 text-center col-form-label fw-bold fs-6">
                        <span >Select Consultant</span>
                    </label>

                    <div class="col-lg-8 fv-row">
                        <select
                        class="form-select form-select-solid form-select-md fw-bold"
                        {...formik.getFieldProps("consultant")}
                        >
                            <option value="">Select a Consultant...</option>
                            {consultants == null? (
                                <option key={0} value=""></option>
                            ):(
                            consultants.map((consultant, i)=>
                            <option key={i} value={consultant.rcid}>{consultant.name}</option>
                            ))}
                        </select>
                        {/* {formik.touched.consultant && formik.errors.consultant && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.consultant}</div>
                        </div>
                        )} */}
                    </div>
                </div>
                
                <div class="row mb-3">
                    <label class="col-lg-4 text-center col-form-label fw-bold fs-6">
                        <span >User Role</span>
                    </label>

                    <div class="col-lg-8 fv-row">
                        <select
                        class="form-select form-select-solid form-select-md fw-bold"
                        {...formik.getFieldProps("roleName")}
                        >
                        <option value="">Select a Role...</option>
                        {roles == null? (
                            <option key={0} value=""></option>
                        ):(
                        roles.map((role, i)=>
                        <option key={i} value={role.roleID}>{role.name}</option>
                        ))}
                        </select>
                        {formik.touched.roleName && formik.errors.roleName && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.roleName}</div>
                        </div>
                        )}
                    </div>
                </div>
                
                <div class="row mb-3">
                <label class="col-lg-4 text-center col-form-label fw-bold fs-6">
                <span >Select Hospital</span>
                </label>

                <div class="col-lg-8 fv-row">
                <select
                    class="form-select form-select-solid form-select-md fw-bold"
                    {...formik.getFieldProps("hospital")}
                >
                    <option value="">Select a Hospital...</option>
                    {hospitals == null? (
                            <option key={0} value=""></option>
                        ):(
                        hospitals.map((hospital, i)=>
                        <option key={i} value={hospital.pid}>{hospital.procName}</option>
                        ))}
                </select>
                {/* {formik.touched.hospital && formik.errors.hospital && (
                    <div class="fv-plugins-message-container">
                    <div class="fv-help-block">{formik.errors.hospital}</div>
                    </div>
                )} */}
                </div>
                </div>

                <hr />

                <h4 class="text-center text-danger">Permissions:</h4>

                <div class="row">  
                <div class="row mb-0 col-lg-6">
                    <label class="col-lg-9 col-form-label fw-bold fs-6 text-center">Assign to Radiologist</label>

                    <div class="col-lg-3 d-flex align-items-center">
                        <div class="form-check form-check-custom form-check-solid form-check-sm fv-row">
                        <input
                        class="form-check-input"
                        type="checkbox"
                        id="isAssignToRadAllow"
                        defaultChecked={data.isAssignToRadAllow}
                        value={""}
                        onChange={() => {
                            updateData({isAssignToRadAllow: !data.isAssignToRadAllow})
                        }}
                        />
                        </div>
                    </div>
                </div>  
                <div class="row mb-0 col-lg-6">
                    <label class="col-lg-9 col-form-label fw-bold fs-6 text-center">Report View/Download</label>

                    <div class="col-lg-3 d-flex align-items-center">
                        <div class="form-check form-check-custom form-check-solid form-check-sm fv-row">
                            <input
                            class="form-check-input"
                            type="checkbox"
                            id="isReportViewAllow"
                            defaultChecked={data.isReportViewAllow}
                            value={""}
                            onChange={() => {
                                updateData({isReportViewAllow: !data.isReportViewAllow})
                            }}
                            />
                        </div>
                    </div>
                </div>
                </div>

                <div class="row">  
                <div class="row mb-0 col-lg-6">
                    <label class="col-lg-9 col-form-label fw-bold fs-6 text-center">Report Write/Edit</label>

                    <div class="col-lg-3 d-flex align-items-center">
                    <div class="form-check form-check-custom form-check-solid form-check-sm fv-row">
                        <input
                        class="form-check-input"
                        type="checkbox"
                        id="isReportWriteAllow"
                        value={""}
                        defaultChecked={data.isReportWriteAllow}
                        onChange={() => {
                            updateData({isReportWriteAllow: !data.isReportWriteAllow})
                        }}
                        />
                        <label class="form-check-label"></label>
                    </div>
                    </div>
                </div>  
                <div class="row mb-0 col-lg-6">
                    <label class="col-lg-9 col-form-label fw-bold fs-6 text-center">Access to Main Viewer</label>

                    <div class="col-lg-3 d-flex align-items-center">
                        <div class="form-check form-check-custom form-check-solid form-check-sm fv-row">
                            <input
                            class="form-check-input"
                            type="checkbox"
                            id="isMainViewerAlloted"
                            defaultChecked={data.isMainViewerAlloted}
                            value={""}
                            onChange={() => {
                                updateData({isMainViewerAlloted: !data.isMainViewerAlloted})
                            }}
                            />
                            <label class="form-check-label"></label>
                        </div>
                    </div>
                </div>
                </div>

                <hr />

                <div class="row mb-3">
                <label class="col-lg-4 text-center col-form-label fw-bold fs-6">Cloud Access Link</label>

                <div class="col-lg-8">
                    <div class="row">
                    <div class="col-lg-12 fv-row">
                        <input
                        type="text"
                        class="col-lg-8 fv-row form-control form-control-md form-control-solid mb-3 mb-lg-0"
                        placeholder=" "
                        {...formik.getFieldProps("cloudAccessLink")}
                        value={""}
                        />
                        {formik.touched.cloudAccessLink && formik.errors.cloudAccessLink && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.cloudAccessLink}</div>
                        </div>
                        )}
                    </div>
                    </div>
                </div>
                </div>

                <div class="row mb-3">
                <label class="col-lg-4 text-center col-form-label fw-bold fs-6">Cloud User Name</label>

                <div class="col-lg-8">
                    <div class="row">
                    <div class="col-lg-12 fv-row">
                        <input
                        type="text"
                        class="col-lg-8 fv-row form-control form-control-md form-control-solid mb-3 mb-lg-0"
                        placeholder=" "
                        {...formik.getFieldProps("cloudUserName")}
                        />
                        {formik.touched.cloudUserName && formik.errors.cloudUserName && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.cloudUserName}</div>
                        </div>
                        )}
                    </div>
                    </div>
                </div>
                </div>

                <div class="row mb-3">
                <label class="col-lg-4 text-center col-form-label fw-bold fs-6">Cloud Password</label>

                <div class="col-lg-8">
                    <div class="row">
                    <div class="col-lg-12 fv-row">
                        <input
                        type="text"
                        class="col-lg-8 fv-row form-control form-control-md form-control-solid mb-3 mb-lg-0"
                        placeholder=" "
                        value={""}
                        {...formik.getFieldProps("cloudPassword")}
                        />
                        {formik.touched.cloudPassword && formik.errors.cloudPassword && (
                        <div class="fv-plugins-message-container">
                            <div class="fv-help-block">{formik.errors.cloudPassword}</div>
                        </div>
                        )}
                    </div>
                    </div>
                </div>
                </div>

            </div>

            <div class="card-footer d-flex justify-content-end">
                <button type="submit" class="btn btn-primary btn-sm btn-group" disabled={loading}>
                {!loading && "Create"}
                {loading && (
                    <span class="indicator-progress" style={{display: "block"}}>
                    Please wait...{" "}
                    <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    </span>
                )}
                </button>
                <button class="btn btn-primary btn-group btn-sm mx-6">Delete</button>
                <button class="btn btn-primary btn-group btn-sm" onClick={cancelAssign}>Cancel</button>
            </div>
            </form>
        </div>
    </div>*@

@*    <EditForm Model="@user" OnValidSubmit="SaveUser">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="Name" class="form-label">Name</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value=@user.FullName />
            </div>
            <ValidationMessage For="@(() => user.Username)" />
        </div>
        <div class="mb-3">
            <label for="Address" class="form-label">Address</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="user.Address" />
            </div>
            <ValidationMessage For="@(() => user.Address)" />
        </div>
        <div class="mb-3">
            <label for="Cellnumber" class="form-label">Cell No</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="user.Cellnumber" />
            </div>
            <ValidationMessage For="@(() => user.Cellnumber)" />
        </div>
        <div class="mb-3">
            <label for="Emailid" class="form-label">E-mail</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="user.Emailid" />
            </div>
            <ValidationMessage For="@(() => user.Emailid)" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
            <button class="btn btn-light" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>*@

    <table class="table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3 table-striped">
      <thead>
        <tr class="fw-bolder text-muted">
            <th class="w-5px">
                <div class="form-check form-check-sm form-check-custom form-check-solid">
                    <input
                    class="form-check-input"
                    type="checkbox"
                    value=" "
                    />
                </div>
            </th>
            <th class="min-w-120px text-center">Login Name</th>
            <th class="min-w-140px text-center">Full Name</th>
            <th class="min-w-120px text-center">Role</th>
            <th class="min-w-120px text-center">Status</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var user in users)
        {
            <tr key={@user.UserId}>
                <td>
                <div class="form-check form-check-sm form-check-custom form-check-solid">
                    <input class="form-check-input widget-13-check" type="checkbox" value="" />
                </div>
                </td>
                <td class="text-center">
                <p  class="text-dark fw-bolder text-hover-primary fs-6">
                    @user.UserId
                </p>
                </td>
                <td class="text-center">
                <p  class="text-dark fw-bolder text-hover-primary d-block mb-1 fs-6">
                    @user.FullName
                </p>
                </td>
                <td class="text-center">
                <p  class="text-dark fw-bolder text-hover-primary d-block mb-1 fs-6">
                    @user.RoleName
                </p>
                </td>
                <td class="text-center">
                <p  class="text-dark fw-bolder text-hover-primary d-block mb-1 fs-6">
                    @user.Status
                </p>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    protected List<VMUserDetail>? users = new();
    protected VMUserDetail user;
    private List<Role> roles = new();
    private List<Hisprocedure>? hospitals = new();

    protected override async Task OnInitializedAsync()
    {
        await GetUsers();
    }

    private async Task GetUsers()
    {
        users = await Http.GetFromJsonAsync<List<VMUserDetail>>("Riswork/GetUserDetails");
    }

    protected async Task SaveUser()
    {
        if (@user.Userid != 0)
        {
            await Http.PutAsJsonAsync("api/User", user);
        }
        else
        {
            await Http.PostAsJsonAsync("api/User", user);
        }
        Cancel();
    }

}
