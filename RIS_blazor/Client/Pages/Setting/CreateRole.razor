@page "/role"
@using RIS_blazor.Shared.Models
@using RIS_blazor.Shared.Models.VWModels
@using RIS_blazor.Shared.Models.ApiModel
@using RIS_blazor.Shared.Repositories
@using Syncfusion.Blazor.DropDowns
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>Create Role</h3>
<br />
<div class="row">
    <div class="col-lg-4 px-3 d-flex justify-content-center">
        <div>
            
            @*<SfTreeView TValue="ProjectMenu" ShowCheckBox="true" AutoCheck="true">
                <TreeViewFieldsSettings TValue="ProjectMenu" Id="MenuId" DataSource="@menus" Text="Name"></TreeViewFieldsSettings>
            </SfTreeView>*@
            @*@foreach (var menu in menus)
            {
                <div>
                    <InputCheckbox id="@menu.Description" Value="permissions[menu.DisplayOrder]"></InputCheckbox>
                    <label for="@menu.Description" class="fs-5">@menu.Name</label>    
                </div>
            }*@
            @*<SfMultiSelect TValue="List<Countries>" Placeholder="e.g. Australia" TItem="Countries" Mode="VisualMode.CheckBox" DataSource="@Country">
                <MultiSelectFieldSettings Value="Name" Text="Code"></MultiSelectFieldSettings>
            </SfMultiSelect>*@
        </div>
    </div>  
    <div class="col-lg-8 px-3">
        <EditForm Model="@_role" OnValidSubmit="SaveRole">
            <div class="row px-5">
                <label for="RoleName" class="col-lg-5">Role Name</label>
                <InputText id="RoleName" class="form-control col-lg-7" @bind-Value="_role.Name"></InputText>
            </div>
            <br />
            <div class="form-group d-flex justify-content-center">
                <button type="submit" class="btn btn-group-sm btn-primary">Save</button>
            </div>
        </EditForm> 

        <br />
        <hr />
        <br />

        <div class="table-responsive">
            <table class="table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3 table-striped table-bordered">
                <thead>
                    <tr class="fw-bolder text-muted">
                        <th class="w-5px">
                            <div class="form-check form-check-sm form-check-custom form-check-solid">
                                <input
                                class="form-check-input"
                                type="checkbox"
                                hidden
                                />
                            </div>
                        </th>
                        <th class="min-w-120px text-center">Role Id</th>
                        <th class="min-w-120px text-center">Role Name</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var role in initeRoles)
                {
                    <tr key={@role.RoleId}>
                        <td>
                            <div class="form-check form-check-sm form-check-custom form-check-solid">
                                <input id="selectedRole" class="form-check-input widget-13-check" type="checkbox" />
                            </div>
                        </td>
                        <td class="text-center">
                            <p class="text-dark fw-bolder text-hover-primary fs-6">
                                @role.RoleId
                            </p>
                        </td>
                        <td class="text-center">
                            <p class="text-dark fw-bolder text-hover-primary d-block mb-1 fs-6">
                                @role.Name 
                            </p>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private List<Role>? initeRoles = new();
    private Role? _role = new();
    private List<ProjectMenu>? menus = new();
    private List<bool> permissions = new();
    private List<int> menuIds = new();
    private int index = 0;
    private bool permission = new();

    protected override async Task OnInitializedAsync()
    {
        initeRoles = await Http.GetFromJsonAsync<List<Role>>("Riswork/GetRoles");
        menus = await Http.GetFromJsonAsync<List<ProjectMenu>>("Riswork/GetProjectMenus");
    }

    private async Task SaveRole()
    {
        await Http.GetFromJsonAsync<Role>("Riswork/SaveRole");

        NavigationManager.NavigateTo("role", true);

    }



}
